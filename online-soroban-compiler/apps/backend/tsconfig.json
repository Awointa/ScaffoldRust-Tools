/**
 * TypeScript Configuration for Backend Service
 * 
 * This configuration is optimized for a modern Node.js backend application
 * using ESM modules and latest JavaScript features.
 */
{
  "compilerOptions": {
    // Environment setup & latest features
    "lib": ["ESNext"],          // Include all ES Next features in type definitions
    "target": "ESNext",         // Compile to the latest ECMAScript version
    "module": "Preserve",       // Preserve the module system used in source files
    "moduleDetection": "force", // Force TypeScript to treat all files as modules
    "jsx": "react-jsx",         // Support JSX syntax without requiring React imports
    "allowJs": true,              // Allow JavaScript files to be compiled

    // Bundler mode
    "moduleResolution": "bundler",              // Use bundler-style module resolution
    "allowImportingTsExtensions": true,           // Allow imports with .ts extensions
    "verbatimModuleSyntax": true,                 // Preserve import/export syntax exactly as written
    "noEmit": true,                               // Don't output compiled files (bundler handles this)

    // Best practices
    "strict": true,                       // Enable all strict type-checking options
    "skipLibCheck": true,                 // Skip type checking of declaration files for better performance
    "noFallthroughCasesInSwitch": true,  // Report errors for fallthrough cases in switch statements
    "noUncheckedIndexedAccess": true,    // Add 'undefined' to any indexed access like array[index]
    "noImplicitOverride": true,          // Ensure overriding methods are explicitly marked with 'override'

    // Some stricter flags (disabled by default)
    "noUnusedLocals": false,                      // Don't report errors on unused local variables
    "noUnusedParameters": false,                  // Don't report errors on unused parameters
    "noPropertyAccessFromIndexSignature": false   // Allow accessing properties via index signatures
  }
}
